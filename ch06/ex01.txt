Load the Control.Arrow module into ghci and find out what the `second` function does.

Arrow a b c represents a process that takes as input something of type b and outputs something of type c.

`second` make a new arrow out of an existing arrow. It performs a transformation (given by their argument) on the second item of a pair. Its signature is:

second :: (Arrow a) => a b c -> a (d, b) (d, c)

(source: (Haskell's Arrow Tutorial)[https://wiki.haskell.org/Arrow_tutorial])
